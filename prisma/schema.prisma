generator client {
  provider = "prisma-client-js" // Prisma Client untuk JS/TS
}

datasource db {
  provider = "mysql" // pakai MySQL/MariaDB
  url      = env("DATABASE_URL") // koneksi dari .env
}

enum Role {
  ADMIN
  PETUGAS
  WARGA
}

model User {
  id           String   @id @default(cuid()) // PK
  username     String   @unique // unik
  passwordHash String
  name         String
  phone        String?  @db.VarChar(20)
  role         Role     @default(WARGA)
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Back-relation 1‚Üî1 ke Pelanggan (User PUNYA/terkait 1 Pelanggan)
  // Field FK-nya berada di model Pelanggan (userId), jadi di sini hanya back-relation.
  pelanggan Pelanggan? @relation("UserPelanggan")

  // Audit: daftar entitas yang pernah di-soft-delete oleh user ini (1 user bisa hapus banyak)
  deletedPelanggan    Pelanggan[]    @relation("DeletedByUser")
  deletedCatat        CatatMeter[]   @relation("DeletedByUserCatatMeter")
  deletedTagihan      Tagihan[]      @relation("DeletedByUserTagihan")
  deletedPembayaran   Pembayaran[]   @relation("DeletedByUserPembayaran")
  deletedCatatPeriode CatatPeriode[] @relation("DeletedByUserCatatPeriode")
  lockedPeriods       CatatPeriode[] @relation("LockedByUser")
  petugasCatat        CatatPeriode[] @relation("PetugasCatatPeriode")
  // üîπ back-relation: 1 petugas bisa pegang banyak zona
  zonasDipegang       Zona[]         @relation("UserZonaPetugas")

  // Soft delete untuk User itu sendiri
  deletedAt        DateTime? // kapan user ‚Äúdihapus‚Äù
  deletedBy        String? // FK ‚Üí User.id yang menghapus
  deletedByUser    User?              @relation("DeletedByUserSelf", fields: [deletedBy], references: [id])
  deletedUsers     User[]             @relation("DeletedByUserSelf") // daftar user yang dia hapus
  JadwalPencatatan JadwalPencatatan[]

  @@index([deletedAt]) // index untuk query cepat by deletedAt
  @@index([deletedBy]) // index untuk query cepat by deletedBy

  // back relation session dan magic link
  sessions        Session[]         @relation("UserSessions")
  magicLinkTokens MagicLinkToken[]  @relation("UserMagicLinks")
}

model Pelanggan {
  id          String   @id @default(cuid())
  kode        String   @unique
  nama        String
  wa          String?  @db.VarChar(20)
  alamat      String
  meterAwal   Int      @default(0)
  statusAktif Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relasi utama ke User (pemilik akun pelanggan). FK disimpan di sini (userId).
  userId String? @unique
  user   User?   @relation("UserPelanggan", fields: [userId], references: [id])

  // üîπ Relasi ke Zona (opsional)
  zonaId String?
  zona   Zona?   @relation("PelangganZona", fields: [zonaId], references: [id])

  // üîπ KOLUM BARU: nomor urut per zona
  noUrutRumah Int? // null = belum ditetapkan

  // Soft delete pelanggan
  deletedAt     DateTime? @db.DateTime(3) // penanda terhapus
  deletedBy     String? // FK ‚Üí User.id yang menghapus
  deletedByUser User?     @relation("DeletedByUser", fields: [deletedBy], references: [id])

  // Back-relations ke transaksi (1 Pelanggan punya banyak CatatMeter & Tagihan)
  catatans CatatMeter[]
  tagihans Tagihan[]

  // üîπ constraint unik per zona (null mengabaikan unik)
  @@unique([zonaId, noUrutRumah])
  @@index([zonaId]) // üîπ biar filter per zona cepat
  @@index([deletedAt]) // filter WHERE deletedAt IS NULL/NOT NULL jadi cepat
  @@index([deletedBy]) // filter/rekap berdasarkan penghapus
  // (opsional) index tambahan untuk sorting cepat
  @@index([zonaId, noUrutRumah])
}

enum PeriodeStatus {
  DRAFT
  FINAL
}

model CatatPeriode {
  id          String @id @default(cuid())
  kodePeriode String @unique // "YYYY-MM"
  bulan       Int
  tahun       Int

  // snapshot setting
  tarifPerM3 Int @default(0)
  abonemen   Int @default(0)

  // pencatatan
  tanggalCatat DateTime? @db.DateTime(3)
  petugasId    String?
  petugas      User?     @relation("PetugasCatatPeriode", fields: [petugasId], references: [id])
  petugasNama  String?

  // progress
  totalPelanggan Int @default(0)
  selesai        Int @default(0)
  pending        Int @default(0)

  // approval / lock
  status       PeriodeStatus @default(DRAFT)
  isLocked     Boolean       @default(false)
  lockedAt     DateTime?     @db.DateTime(3)
  lockedBy     String?
  lockedByUser User?         @relation("LockedByUser", fields: [lockedBy], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entries CatatMeter[]

  // audit delete
  deletedAt     DateTime? @db.DateTime(3)
  deletedBy     String?
  deletedByUser User?     @relation("DeletedByUserCatatPeriode", fields: [deletedBy], references: [id])

  @@index([kodePeriode])
  @@index([status])
  @@index([isLocked, lockedAt])
  @@index([petugasId])
  @@index([tanggalCatat])
  @@index([deletedAt])
  @@index([deletedBy])
}

// ===== Detail pencatatan per pelanggan =====
model CatatMeter {
  id String @id @default(cuid())

  // FK ‚Üí master periode
  periodeId String
  periode   CatatPeriode @relation(fields: [periodeId], references: [id])

  // FK ‚Üí pelanggan
  pelangganId String
  pelanggan   Pelanggan @relation(fields: [pelangganId], references: [id])

  // angka meter
  meterAwal   Int @default(0) // biar aman saat kolom ditambahkan
  meterAkhir  Int @default(0)
  pemakaianM3 Int @default(0) // max(meterAkhir - meterAwal, 0)

  // snapshot biaya saat dibuat
  tarifPerM3 Int @default(0)
  abonemen   Int @default(0)
  total      Int @default(0) // (tarifPerM3 * pemakaianM3) + abonemen

  kendala String? @db.Text // <‚Äî TAMBAH BARIS INI

  // status entri
  status CatatStatus @default(PENDING)

  // WA
  waTerkirim Boolean   @default(false)
  waSentAt   DateTime?

  // Tambahan untuk ‚Äúlock per pelanggan‚Äù
  isLocked   Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // ‚¨áÔ∏è SIMPAN SNAPSHOT ZONA SAAT ENTRY DIBUAT
  zonaIdSnapshot   String?
  zonaNamaSnapshot String?

  // soft delete & audit
  deletedAt     DateTime? @db.DateTime(3)
  deletedBy     String?
  deletedByUser User?     @relation("DeletedByUserCatatMeter", fields: [deletedBy], references: [id])

  // unik per (periode, pelanggan)
  @@unique([periodeId, pelangganId])
  @@index([status])
  @@index([zonaIdSnapshot])
  @@index([zonaNamaSnapshot])
  @@index([deletedAt])
  @@index([deletedBy])
}

// enum status entri
enum CatatStatus {
  PENDING
  DONE
}

model Tagihan {
  id            String   @id @default(cuid())
  periode       String
  tarifPerM3    Int
  abonemen      Int      @default(0)
  denda         Int      @default(0)
  totalTagihan  Int
  statusBayar   String   @default("UNPAID")
  statusVerif   String   @default("UNVERIFIED")
  tglJatuhTempo DateTime
  info          String?  @db.Text
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // FK ‚Üí Pelanggan (banyak Tagihan milik 1 Pelanggan)
  pelangganId String
  pelanggan   Pelanggan @relation(fields: [pelangganId], references: [id])

  // 1 tagihan punya banyak pembayaran
  pembayarans Pembayaran[]

  // Soft delete tagihan
  deletedAt     DateTime? @db.DateTime(3)
  deletedBy     String?
  deletedByUser User?     @relation("DeletedByUserTagihan", fields: [deletedBy], references: [id])

  // Unik per (pelanggan, periode)
  @@unique([pelangganId, periode])
  // Index praktis untuk listing & filter status
  @@index([periode])
  @@index([statusBayar, statusVerif])
  @@index([deletedAt])
  @@index([deletedBy])

  // back-relation ke MagicLinkToken (opsional)
  magicLinkTokens MagicLinkToken[] @relation("TagihanMagicLinks")
}

// enum metode bayar
enum MetodeBayar {
  TUNAI
  TRANSFER
  EWALLET
  QRIS
}

model Pembayaran {
  id           String   @id @default(cuid())
  tanggalBayar DateTime @default(now())
  jumlahBayar  Int
  buktiUrl     String?
  adminBayar   String? // misal nama admin yang memproses

  // FK ‚Üí Tagihan (banyak Pembayaran milik 1 Tagihan)
  tagihanId String
  tagihan   Tagihan @relation(fields: [tagihanId], references: [id])

  metode    MetodeBayar    @default(TUNAI)

  // ‚úÖ Catatan/keterangan pelunasan
  keterangan   String?  @db.Text

  // Soft delete pembayaran
  deletedAt     DateTime? @db.DateTime(3)
  deletedBy     String?
  deletedByUser User?     @relation("DeletedByUserPembayaran", fields: [deletedBy], references: [id])

  // Index umum
  @@index([tanggalBayar])
  @@index([tagihanId], map: "Pembayaran_tagihanId_fkey")
  @@index([deletedAt])
  @@index([deletedBy])
}

model Setting {
  id                     Int      @id @default(1)

  // ‚Äî‚Äî‚Äî Tarif & penagihan ‚Äî‚Äî‚Äî
  tarifPerM3             Int      @default(3000)
  abonemen               Int      @default(10000)
  biayaAdmin             Int      @default(2500)
  tglJatuhTempo          Int      @default(15)
  dendaTelatBulanSama    Int      @default(5000)
  dendaTelatBulanBerbeda Int      @default(10000)

  // ‚Äî‚Äî‚Äî Profil sistem ‚Äî‚Äî‚Äî
  namaPerusahaan String? @db.VarChar(120)
  alamat         String? @db.VarChar(255)
  telepon        String? @db.VarChar(30)
  email          String? @db.VarChar(120)
  logoUrl        String? @db.VarChar(255)

  // ‚Äî‚Äî‚Äî Pengaturan Jadwal ‚Äî‚Äî‚Äî
  // Periode aktif di UI (mis. "2025-09")
  periodeJadwalAktif  String?   @db.VarChar(7)
  // Tanggal default catat meter untuk generate (Date, disimpan UTC)
  tanggalCatatDefault DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model WaLog {
  id        String   @id @default(cuid())
  tujuan    String
  tipe      String
  payload   String   @db.Text
  status    String
  createdAt DateTime @default(now())
}

enum JadwalStatus {
  PENDING
  IN_PROGRESS
  DONE
  CANCELLED
}

model Zona {
  id               String             @id @default(cuid())
  kode             String             @unique
  nama             String
  deskripsi        String?
  petugasId        String?
  petugas          User?              @relation("UserZonaPetugas", fields: [petugasId], references: [id])
  pelanggan        Pelanggan[]        @relation("PelangganZona")
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  JadwalPencatatan JadwalPencatatan[]
}

enum JadwalUiStatus {
  WAITING
  IN_PROGRESS
  NON_PROGRESS
  DONE
  OVERDUE
}

model JadwalPencatatan {
  id             String         @id @default(cuid())
  // format "YYYY-MM" agar sejalan dengan filter UI (filters.month)
  bulan          String         @db.VarChar(7)
  tanggalRencana DateTime
  target         Int            @default(0)
  progress       Int            @default(0)
  status         JadwalUiStatus @default(WAITING)

  // Relasi
  zonaId    String?
  zona      Zona?   @relation(fields: [zonaId], references: [id])
  petugasId String?
  petugas   User?   @relation(fields: [petugasId], references: [id])

  // Opsional: info alamat/titik kumpul untuk tampil di tabel
  alamat String? @db.VarChar(255)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([bulan])
  @@index([status])
  @@index([zonaId])
  @@index([petugasId])
}

// model session dan magic link untuk kirim link auto login
model Session {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation("UserSessions", fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model MagicLinkToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation("UserMagicLinks", fields: [userId], references: [id])

  tagihanId String?
  tagihan   Tagihan? @relation("TagihanMagicLinks", fields: [tagihanId], references: [id])

  purpose   String   @default("pelunasan")
  expiresAt DateTime
  usedAt    DateTime?
  createdAt DateTime @default(now())

  @@index([userId, purpose, expiresAt])
}